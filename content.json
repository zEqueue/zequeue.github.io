{"meta":{"title":"zEqueue's Blog","subtitle":"且谈技术，</br>兼论吃喝，</br>偶谑风月，</br>不言国事。","description":"种一棵树最好的时间是十年前，</br>其次是现在。","author":"zEqueue","url":"http://yoursite.com"},"pages":[{"title":"分类","date":"2017-03-12T08:37:07.000Z","updated":"2017-03-19T16:49:02.000Z","comments":true,"path":"categories/index.html","permalink":"http://yoursite.com/categories/index.html","excerpt":"","text":""},{"title":"欢迎光临","date":"2017-03-12T09:13:53.000Z","updated":"2017-03-19T16:38:18.000Z","comments":true,"path":"about/index.html","permalink":"http://yoursite.com/about/index.html","excerpt":"","text":"简单介绍 ID: zEqueue 看雪论坛：zEqueue root@zequeue.com 现任启明星辰AdLab—-安全开发工程师 职业技能 二进制安全、编程 C/C++/C#、Python WINDBG、IDA、OD 恶意代码分析、逆向分析、Windows内核安全 娱乐技能 Dota2(天梯常年3600分，顶峰4200分，老年手残玩家，擅长劣单、辅助) War3 Solo(擅长兽族、暗夜)"},{"title":"标签","date":"2017-03-12T08:36:40.000Z","updated":"2017-03-12T09:08:08.000Z","comments":false,"path":"tags/index.html","permalink":"http://yoursite.com/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"技术学习书单","slug":"BookList","date":"2017-03-19T17:04:19.000Z","updated":"2017-03-19T17:22:51.000Z","comments":true,"path":"2017/03/20/BookList/","link":"","permalink":"http://yoursite.com/2017/03/20/BookList/","excerpt":"安全 《漏洞战争》 《软件调试》 《加密与解密》 《黑客免杀攻防》 《恶意代码分析实战》 《Windows内核原理与实践》 《深入解析Windows操作系统》 《程序员的自我修养-链接、装载与库》 《逆向工程核心原理》","text":"安全 《漏洞战争》 《软件调试》 《加密与解密》 《黑客免杀攻防》 《恶意代码分析实战》 《Windows内核原理与实践》 《深入解析Windows操作系统》 《程序员的自我修养-链接、装载与库》 《逆向工程核心原理》 《逆向工程实战》 《软件保护及分析技术-原理与实践》 《0day安全-软件漏洞分析技术》 《天书夜读-从汇编语言到Windows内核》 《C++反汇编揭秘》 《Professional Rootkits》 《Windows内核情景分析》 《RootKits-Windows内核的安全防护》 编程 《C和指针》 《Windows内核安全与驱动开发》 《Windows驱动开发技术详解》 《Windows核心编程》 《大话数据结构》 《VC++深入详解》 《黑客防线 VC专辑》","categories":[{"name":"分享","slug":"分享","permalink":"http://yoursite.com/categories/分享/"}],"tags":[{"name":"分享","slug":"分享","permalink":"http://yoursite.com/tags/分享/"}]},{"title":"CVE-2012-0158分析","slug":"CVE-2012-0158","date":"2017-03-12T09:03:59.000Z","updated":"2017-03-19T17:22:02.000Z","comments":true,"path":"2017/03/12/CVE-2012-0158/","link":"","permalink":"http://yoursite.com/2017/03/12/CVE-2012-0158/","excerpt":"0x00 CVE-2012-0158 调试过程首先给WinExec下断点123456789101112bp Kernel32!Winexec7c8623ad 8bff mov edi,edi // 断在此处7c8623af 55 push ebp7c8623b0 8bec mov ebp,esp7c8623b2 83ec54 sub esp,54h7c8623b5 53 push ebx7c8623b6 56 push esi7c8623b7 57 push edi7c8623b8 6a11 push 11h7c8623ba 59 pop ecx7c8623bb 33c0 xor eax,eax7c8623bd 33f6 xor esi,esi其中WinExec的定义如下：1UINT WinExec(LPCSTR lpCmdLine, UINT uCmdShow);","text":"0x00 CVE-2012-0158 调试过程首先给WinExec下断点123456789101112bp Kernel32!Winexec7c8623ad 8bff mov edi,edi // 断在此处7c8623af 55 push ebp7c8623b0 8bec mov ebp,esp7c8623b2 83ec54 sub esp,54h7c8623b5 53 push ebx7c8623b6 56 push esi7c8623b7 57 push edi7c8623b8 6a11 push 11h7c8623ba 59 pop ecx7c8623bb 33c0 xor eax,eax7c8623bd 33f6 xor esi,esi其中WinExec的定义如下：1UINT WinExec(LPCSTR lpCmdLine, UINT uCmdShow); 此时的栈帧 低地址 WinExec的返回地址 lpCmdLine uCmdShow FunA调用 WinExec 高地址 123456789100:000&gt; dd esp001215d0 0012189a 08d9f0a8 00000000 08d9f0a8001215e0 0001c000 00000340 00121638 00121ac0001215f0 0d403db0 08d9ffe8 0001c000 0000000100121600 275c8a0a 08d9ffe8 0d403db0 0001c00000121610 00000000 08d2e008 0d403d98 00002d2600121620 00002d26 0d401550 00002841 0002159e00121630 00000000 00000340 00000000 001216b100121640 1005c48b c7000001 4d032400 005ae908 0012189a 是WinExec的返回地址08d9f0a8 是lpCmdLine00000000 是uCmdShow 0:000&gt; db 08d9f0a808d9f0a8 43 3a 5c 44 6f 63 75 6d-65 6e 74 73 20 61 6e 64 C:\\Documents and08d9f0b8 20 53 65 74 74 69 6e 67-73 5c 41 64 6d 69 6e 69 Settings\\Admini08d9f0c8 73 74 72 61 74 6f 72 5c-61 2e 65 78 65 00 00 00 strator\\a.exe… 1234567890:000&gt; u 0012189a0012189a eb22 jmp 001218be0012189c 6a01 push 10012189e 6a00 push 0001218a0 6a00 push 0001218a2 ff75f4 push dword ptr [ebp-0Ch]001218a5 6a00 push 0001218a7 e814feffff call 001216c0001218ac 0555000000 add eax,55h kb命令可以显示放在栈上的前三个参数kp命令可以根据符号文件中的函数原型信息来自动0:000&gt; kvChildEBP RetAddr Args to Child001215cc 0012189a 08d9f0a8 00000000 08d9f0a8 kernel32!WinExec (FPO: [Non-Fpo])WARNING: Frame IP not in any known module. Following frames may be wrong.001215fc 275c8a0a 08d9ffe8 0d403db0 0001c000 0x12189a00121638 001216b1 1005c48b c7000001 4d032400 MSCOMCTL!DllGetClassObject+0x41cc600000000 00000000 00000000 00000000 00000000 0x1216b1 通过IDA逆向MSCOMCTL.OCX,发现其导出函数DllGetClassObject的起始地址为0x27586d440x27586D44 + 0x41cc6 = 0x275c8a0a0x275c8a0a 位于函数sub_275c89c7(int a1,BSTR bstrString)中即函数sub_275c89c7就是包含漏洞的函数 首先看内存地址为275c89c7处的代码123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263.text:275C89C7 push ebp.text:275C89C8 mov ebp, esp.text:275C89CA sub esp, 14h ; 分配0x14大小的栈空间.text:275C89CD push ebx.text:275C89CE mov ebx, [ebp+bstrString].text:275C89D1 push esi.text:275C89D2 push edi.text:275C89D3 push 0Ch ; dwBytes.text:275C89D5 lea eax, [ebp+var_14].text:275C89D8 push ebx ; lpMem.text:275C89D9 push eax ; int.text:275C89DA call sub_275C876D.text:275C89DF add esp, 0Ch ; 用掉了0x0c大小的栈空间，还剩0x8个字节.text:275C89E2 test eax, eax.text:275C89E4 jl short loc_275C8A52.text:275C89E6 cmp [ebp+var_14], 6A626F43h.text:275C89ED jnz loc_275D3085.text:275C89F3 cmp [ebp+dwBytes], 8.text:275C89F7 jb loc_275D3085.text:275C89FD push [ebp+dwBytes] ; dwBytes.text:275C8A00 lea eax, [ebp+var_8].text:275C8A03 push ebx ; lpMem.text:275C8A04 push eax ; int.text:275C8A05 call sub_275C876D ; 破坏栈空间，导致栈溢出.text:275C8A0A mov esi, eax.text:275C8A0C add esp, 0Ch.text:275C8A0F test esi, esi.text:275C8A11 jl short loc_275C8A50.text:275C8A13 cmp [ebp+var_8], 0.text:275C8A17 mov edi, [ebp+arg_0].text:275C8A1A jz short loc_275C8A46.text:275C8A1C and [ebp+bstrString], 0.text:275C8A20 lea eax, [ebp+bstrString].text:275C8A23 push ebx ; int.text:275C8A24 push eax ; len.text:275C8A25 call sub_275C8A59.text:275C8A2A mov esi, eax.text:275C8A2C pop ecx.text:275C8A2D test esi, esi.text:275C8A2F pop ecx.text:275C8A30 jl short loc_275C8A50.text:275C8A32 push [ebp+bstrString] ; strIn.text:275C8A35 lea ecx, [edi-24h].text:275C8A38 call sub_27585BE7.text:275C8A3D push [ebp+bstrString] ; bstrString.text:275C8A40 call ds:SysFreeString.text:275C8A46.text:275C8A46 loc_275C8A46: ; CODE XREF: sub_275C89C7+53\u0018j.text:275C8A46 cmp [ebp+var_4], 0.text:275C8A4A jnz loc_275D308F.text:275C8A50.text:275C8A50 loc_275C8A50: ; CODE XREF: sub_275C89C7+4A\u0018j.text:275C8A50 ; sub_275C89C7+69\u0018j ....text:275C8A50 mov eax, esi.text:275C8A52.text:275C8A52 loc_275C8A52: ; CODE XREF: sub_275C89C7+1D\u0018j.text:275C8A52 ; sub_275C89C7+A6C3\u0019j.text:275C8A52 pop edi.text:275C8A53 pop esi.text:275C8A54 pop ebx.text:275C8A55 leave.text:275C8A56 retn 8.text:275C8A56 sub_275C89C7 endp sxe ld:MSCOMCTL.OCX 12345678910111213275C89DA E8 8EFDFFFF call MSCOMCTL.275C876D275C89DF 83C4 0C add esp,0xC275C89E2 85C0 test eax,eax275C89E4 7C 6C jl short MSCOMCTL.275C8A52275C89E6 817D EC 436F626&gt;cmp dword ptr ss:[ebp-0x14],0x6A626F43275C89ED 0F85 92A60000 jnz MSCOMCTL.275D3085275C89F3 837D F4 08 cmp dword ptr ss:[ebp-0xC],0x8275C89F7 0F82 88A60000 jb MSCOMCTL.275D3085275C89FD FF75 F4 push dword ptr ss:[ebp-0xC] ; MSCOMCTL.&lt;ModuleEntryPoint&gt;275C8A00 8D45 F8 lea eax,dword ptr ss:[ebp-0x8]275C8A03 53 push ebx ; MSCOMCTL.27580000275C8A04 50 push eax275C8A05 E8 63FDFFFF call MSCOMCTL.275C876D ; 第二次执行的时候早造成栈溢出 未完、待续","categories":[{"name":"漏洞分析","slug":"漏洞分析","permalink":"http://yoursite.com/categories/漏洞分析/"}],"tags":[{"name":"CVE-2012-0158","slug":"CVE-2012-0158","permalink":"http://yoursite.com/tags/CVE-2012-0158/"}]},{"title":"Hello World","slug":"hello-world","date":"2017-03-12T03:39:18.000Z","updated":"2017-03-12T03:39:18.000Z","comments":true,"path":"2017/03/12/hello-world/","link":"","permalink":"http://yoursite.com/2017/03/12/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}]}